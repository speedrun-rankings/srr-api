/*
 * This file is generated by jOOQ.
 */
package io.github.sornerol.speedrunrankingsapi.data.generated.srrdb.tables;


import io.github.sornerol.speedrunrankingsapi.data.generated.srrdb.Keys;
import io.github.sornerol.speedrunrankingsapi.data.generated.srrdb.Srrdb;
import io.github.sornerol.speedrunrankingsapi.data.generated.srrdb.tables.records.GamePlatformAsgRecord;
import io.github.sornerol.speedrunrankingsapi.util.typeconverter.UUIDByteArrayToStringConverter;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row2;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GamePlatformAsg extends TableImpl<GamePlatformAsgRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>srrdb.game_platform_asg</code>
     */
    public static final GamePlatformAsg GAME_PLATFORM_ASG = new GamePlatformAsg();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<GamePlatformAsgRecord> getRecordType() {
        return GamePlatformAsgRecord.class;
    }

    /**
     * The column <code>srrdb.game_platform_asg.game_id</code>.
     */
    public final TableField<GamePlatformAsgRecord, String> GAME_ID = createField(DSL.name("game_id"), SQLDataType.BINARY(16).nullable(false), this, "", new UUIDByteArrayToStringConverter());

    /**
     * The column <code>srrdb.game_platform_asg.platform_id</code>.
     */
    public final TableField<GamePlatformAsgRecord, Integer> PLATFORM_ID = createField(DSL.name("platform_id"), SQLDataType.INTEGER.nullable(false), this, "");

    private GamePlatformAsg(Name alias, Table<GamePlatformAsgRecord> aliased) {
        this(alias, aliased, null);
    }

    private GamePlatformAsg(Name alias, Table<GamePlatformAsgRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>srrdb.game_platform_asg</code> table reference
     */
    public GamePlatformAsg(String alias) {
        this(DSL.name(alias), GAME_PLATFORM_ASG);
    }

    /**
     * Create an aliased <code>srrdb.game_platform_asg</code> table reference
     */
    public GamePlatformAsg(Name alias) {
        this(alias, GAME_PLATFORM_ASG);
    }

    /**
     * Create a <code>srrdb.game_platform_asg</code> table reference
     */
    public GamePlatformAsg() {
        this(DSL.name("game_platform_asg"), null);
    }

    public <O extends Record> GamePlatformAsg(Table<O> child, ForeignKey<O, GamePlatformAsgRecord> key) {
        super(child, key, GAME_PLATFORM_ASG);
    }

    @Override
    public Schema getSchema() {
        return Srrdb.SRRDB;
    }

    @Override
    public List<ForeignKey<GamePlatformAsgRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<GamePlatformAsgRecord, ?>>asList(Keys.GAME_PLATFORM_ASG_FK, Keys.GAME_PLATFORM_ASG_FK_1);
    }

    private transient Game _game;
    private transient Platform _platform;

    public Game game() {
        if (_game == null)
            _game = new Game(this, Keys.GAME_PLATFORM_ASG_FK);

        return _game;
    }

    public Platform platform() {
        if (_platform == null)
            _platform = new Platform(this, Keys.GAME_PLATFORM_ASG_FK_1);

        return _platform;
    }

    @Override
    public GamePlatformAsg as(String alias) {
        return new GamePlatformAsg(DSL.name(alias), this);
    }

    @Override
    public GamePlatformAsg as(Name alias) {
        return new GamePlatformAsg(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public GamePlatformAsg rename(String name) {
        return new GamePlatformAsg(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public GamePlatformAsg rename(Name name) {
        return new GamePlatformAsg(name, null);
    }

    // -------------------------------------------------------------------------
    // Row2 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row2<String, Integer> fieldsRow() {
        return (Row2) super.fieldsRow();
    }
}
