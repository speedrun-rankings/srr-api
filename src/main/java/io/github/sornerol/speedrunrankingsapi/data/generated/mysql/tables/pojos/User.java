/*
 * This file is generated by jOOQ.
 */
package io.github.sornerol.speedrunrankingsapi.data.generated.mysql.tables.pojos;


import java.io.Serializable;
import java.math.BigDecimal;

import org.jooq.types.ULong;


/**
 * VIEW
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class User implements Serializable {

    private static final long serialVersionUID = 1L;

    private final String     host;
    private final String     user;
    private final String     password;
    private final String     selectPriv;
    private final String     insertPriv;
    private final String     updatePriv;
    private final String     deletePriv;
    private final String     createPriv;
    private final String     dropPriv;
    private final String     reloadPriv;
    private final String     shutdownPriv;
    private final String     processPriv;
    private final String     filePriv;
    private final String     grantPriv;
    private final String     referencesPriv;
    private final String     indexPriv;
    private final String     alterPriv;
    private final String     showDbPriv;
    private final String     superPriv;
    private final String     createTmpTablePriv;
    private final String     lockTablesPriv;
    private final String     executePriv;
    private final String     replSlavePriv;
    private final String     replClientPriv;
    private final String     createViewPriv;
    private final String     showViewPriv;
    private final String     createRoutinePriv;
    private final String     alterRoutinePriv;
    private final String     createUserPriv;
    private final String     eventPriv;
    private final String     triggerPriv;
    private final String     createTablespacePriv;
    private final String     deleteHistoryPriv;
    private final String     sslType;
    private final String     sslCipher;
    private final String     x509Issuer;
    private final String     x509Subject;
    private final ULong      maxQuestions;
    private final ULong      maxUpdates;
    private final ULong      maxConnections;
    private final Long       maxUserConnections;
    private final String     plugin;
    private final String     authenticationString;
    private final String     passwordExpired;
    private final String     isRole;
    private final String     defaultRole;
    private final BigDecimal maxStatementTime;

    public User(User value) {
        this.host = value.host;
        this.user = value.user;
        this.password = value.password;
        this.selectPriv = value.selectPriv;
        this.insertPriv = value.insertPriv;
        this.updatePriv = value.updatePriv;
        this.deletePriv = value.deletePriv;
        this.createPriv = value.createPriv;
        this.dropPriv = value.dropPriv;
        this.reloadPriv = value.reloadPriv;
        this.shutdownPriv = value.shutdownPriv;
        this.processPriv = value.processPriv;
        this.filePriv = value.filePriv;
        this.grantPriv = value.grantPriv;
        this.referencesPriv = value.referencesPriv;
        this.indexPriv = value.indexPriv;
        this.alterPriv = value.alterPriv;
        this.showDbPriv = value.showDbPriv;
        this.superPriv = value.superPriv;
        this.createTmpTablePriv = value.createTmpTablePriv;
        this.lockTablesPriv = value.lockTablesPriv;
        this.executePriv = value.executePriv;
        this.replSlavePriv = value.replSlavePriv;
        this.replClientPriv = value.replClientPriv;
        this.createViewPriv = value.createViewPriv;
        this.showViewPriv = value.showViewPriv;
        this.createRoutinePriv = value.createRoutinePriv;
        this.alterRoutinePriv = value.alterRoutinePriv;
        this.createUserPriv = value.createUserPriv;
        this.eventPriv = value.eventPriv;
        this.triggerPriv = value.triggerPriv;
        this.createTablespacePriv = value.createTablespacePriv;
        this.deleteHistoryPriv = value.deleteHistoryPriv;
        this.sslType = value.sslType;
        this.sslCipher = value.sslCipher;
        this.x509Issuer = value.x509Issuer;
        this.x509Subject = value.x509Subject;
        this.maxQuestions = value.maxQuestions;
        this.maxUpdates = value.maxUpdates;
        this.maxConnections = value.maxConnections;
        this.maxUserConnections = value.maxUserConnections;
        this.plugin = value.plugin;
        this.authenticationString = value.authenticationString;
        this.passwordExpired = value.passwordExpired;
        this.isRole = value.isRole;
        this.defaultRole = value.defaultRole;
        this.maxStatementTime = value.maxStatementTime;
    }

    public User(
        String     host,
        String     user,
        String     password,
        String     selectPriv,
        String     insertPriv,
        String     updatePriv,
        String     deletePriv,
        String     createPriv,
        String     dropPriv,
        String     reloadPriv,
        String     shutdownPriv,
        String     processPriv,
        String     filePriv,
        String     grantPriv,
        String     referencesPriv,
        String     indexPriv,
        String     alterPriv,
        String     showDbPriv,
        String     superPriv,
        String     createTmpTablePriv,
        String     lockTablesPriv,
        String     executePriv,
        String     replSlavePriv,
        String     replClientPriv,
        String     createViewPriv,
        String     showViewPriv,
        String     createRoutinePriv,
        String     alterRoutinePriv,
        String     createUserPriv,
        String     eventPriv,
        String     triggerPriv,
        String     createTablespacePriv,
        String     deleteHistoryPriv,
        String     sslType,
        String     sslCipher,
        String     x509Issuer,
        String     x509Subject,
        ULong      maxQuestions,
        ULong      maxUpdates,
        ULong      maxConnections,
        Long       maxUserConnections,
        String     plugin,
        String     authenticationString,
        String     passwordExpired,
        String     isRole,
        String     defaultRole,
        BigDecimal maxStatementTime
    ) {
        this.host = host;
        this.user = user;
        this.password = password;
        this.selectPriv = selectPriv;
        this.insertPriv = insertPriv;
        this.updatePriv = updatePriv;
        this.deletePriv = deletePriv;
        this.createPriv = createPriv;
        this.dropPriv = dropPriv;
        this.reloadPriv = reloadPriv;
        this.shutdownPriv = shutdownPriv;
        this.processPriv = processPriv;
        this.filePriv = filePriv;
        this.grantPriv = grantPriv;
        this.referencesPriv = referencesPriv;
        this.indexPriv = indexPriv;
        this.alterPriv = alterPriv;
        this.showDbPriv = showDbPriv;
        this.superPriv = superPriv;
        this.createTmpTablePriv = createTmpTablePriv;
        this.lockTablesPriv = lockTablesPriv;
        this.executePriv = executePriv;
        this.replSlavePriv = replSlavePriv;
        this.replClientPriv = replClientPriv;
        this.createViewPriv = createViewPriv;
        this.showViewPriv = showViewPriv;
        this.createRoutinePriv = createRoutinePriv;
        this.alterRoutinePriv = alterRoutinePriv;
        this.createUserPriv = createUserPriv;
        this.eventPriv = eventPriv;
        this.triggerPriv = triggerPriv;
        this.createTablespacePriv = createTablespacePriv;
        this.deleteHistoryPriv = deleteHistoryPriv;
        this.sslType = sslType;
        this.sslCipher = sslCipher;
        this.x509Issuer = x509Issuer;
        this.x509Subject = x509Subject;
        this.maxQuestions = maxQuestions;
        this.maxUpdates = maxUpdates;
        this.maxConnections = maxConnections;
        this.maxUserConnections = maxUserConnections;
        this.plugin = plugin;
        this.authenticationString = authenticationString;
        this.passwordExpired = passwordExpired;
        this.isRole = isRole;
        this.defaultRole = defaultRole;
        this.maxStatementTime = maxStatementTime;
    }

    /**
     * Getter for <code>mysql.user.Host</code>.
     */
    public String getHost() {
        return this.host;
    }

    /**
     * Getter for <code>mysql.user.User</code>.
     */
    public String getUser() {
        return this.user;
    }

    /**
     * Getter for <code>mysql.user.Password</code>.
     */
    public String getPassword() {
        return this.password;
    }

    /**
     * Getter for <code>mysql.user.Select_priv</code>.
     */
    public String getSelectPriv() {
        return this.selectPriv;
    }

    /**
     * Getter for <code>mysql.user.Insert_priv</code>.
     */
    public String getInsertPriv() {
        return this.insertPriv;
    }

    /**
     * Getter for <code>mysql.user.Update_priv</code>.
     */
    public String getUpdatePriv() {
        return this.updatePriv;
    }

    /**
     * Getter for <code>mysql.user.Delete_priv</code>.
     */
    public String getDeletePriv() {
        return this.deletePriv;
    }

    /**
     * Getter for <code>mysql.user.Create_priv</code>.
     */
    public String getCreatePriv() {
        return this.createPriv;
    }

    /**
     * Getter for <code>mysql.user.Drop_priv</code>.
     */
    public String getDropPriv() {
        return this.dropPriv;
    }

    /**
     * Getter for <code>mysql.user.Reload_priv</code>.
     */
    public String getReloadPriv() {
        return this.reloadPriv;
    }

    /**
     * Getter for <code>mysql.user.Shutdown_priv</code>.
     */
    public String getShutdownPriv() {
        return this.shutdownPriv;
    }

    /**
     * Getter for <code>mysql.user.Process_priv</code>.
     */
    public String getProcessPriv() {
        return this.processPriv;
    }

    /**
     * Getter for <code>mysql.user.File_priv</code>.
     */
    public String getFilePriv() {
        return this.filePriv;
    }

    /**
     * Getter for <code>mysql.user.Grant_priv</code>.
     */
    public String getGrantPriv() {
        return this.grantPriv;
    }

    /**
     * Getter for <code>mysql.user.References_priv</code>.
     */
    public String getReferencesPriv() {
        return this.referencesPriv;
    }

    /**
     * Getter for <code>mysql.user.Index_priv</code>.
     */
    public String getIndexPriv() {
        return this.indexPriv;
    }

    /**
     * Getter for <code>mysql.user.Alter_priv</code>.
     */
    public String getAlterPriv() {
        return this.alterPriv;
    }

    /**
     * Getter for <code>mysql.user.Show_db_priv</code>.
     */
    public String getShowDbPriv() {
        return this.showDbPriv;
    }

    /**
     * Getter for <code>mysql.user.Super_priv</code>.
     */
    public String getSuperPriv() {
        return this.superPriv;
    }

    /**
     * Getter for <code>mysql.user.Create_tmp_table_priv</code>.
     */
    public String getCreateTmpTablePriv() {
        return this.createTmpTablePriv;
    }

    /**
     * Getter for <code>mysql.user.Lock_tables_priv</code>.
     */
    public String getLockTablesPriv() {
        return this.lockTablesPriv;
    }

    /**
     * Getter for <code>mysql.user.Execute_priv</code>.
     */
    public String getExecutePriv() {
        return this.executePriv;
    }

    /**
     * Getter for <code>mysql.user.Repl_slave_priv</code>.
     */
    public String getReplSlavePriv() {
        return this.replSlavePriv;
    }

    /**
     * Getter for <code>mysql.user.Repl_client_priv</code>.
     */
    public String getReplClientPriv() {
        return this.replClientPriv;
    }

    /**
     * Getter for <code>mysql.user.Create_view_priv</code>.
     */
    public String getCreateViewPriv() {
        return this.createViewPriv;
    }

    /**
     * Getter for <code>mysql.user.Show_view_priv</code>.
     */
    public String getShowViewPriv() {
        return this.showViewPriv;
    }

    /**
     * Getter for <code>mysql.user.Create_routine_priv</code>.
     */
    public String getCreateRoutinePriv() {
        return this.createRoutinePriv;
    }

    /**
     * Getter for <code>mysql.user.Alter_routine_priv</code>.
     */
    public String getAlterRoutinePriv() {
        return this.alterRoutinePriv;
    }

    /**
     * Getter for <code>mysql.user.Create_user_priv</code>.
     */
    public String getCreateUserPriv() {
        return this.createUserPriv;
    }

    /**
     * Getter for <code>mysql.user.Event_priv</code>.
     */
    public String getEventPriv() {
        return this.eventPriv;
    }

    /**
     * Getter for <code>mysql.user.Trigger_priv</code>.
     */
    public String getTriggerPriv() {
        return this.triggerPriv;
    }

    /**
     * Getter for <code>mysql.user.Create_tablespace_priv</code>.
     */
    public String getCreateTablespacePriv() {
        return this.createTablespacePriv;
    }

    /**
     * Getter for <code>mysql.user.Delete_history_priv</code>.
     */
    public String getDeleteHistoryPriv() {
        return this.deleteHistoryPriv;
    }

    /**
     * Getter for <code>mysql.user.ssl_type</code>.
     */
    public String getSslType() {
        return this.sslType;
    }

    /**
     * Getter for <code>mysql.user.ssl_cipher</code>.
     */
    public String getSslCipher() {
        return this.sslCipher;
    }

    /**
     * Getter for <code>mysql.user.x509_issuer</code>.
     */
    public String getX509Issuer() {
        return this.x509Issuer;
    }

    /**
     * Getter for <code>mysql.user.x509_subject</code>.
     */
    public String getX509Subject() {
        return this.x509Subject;
    }

    /**
     * Getter for <code>mysql.user.max_questions</code>.
     */
    public ULong getMaxQuestions() {
        return this.maxQuestions;
    }

    /**
     * Getter for <code>mysql.user.max_updates</code>.
     */
    public ULong getMaxUpdates() {
        return this.maxUpdates;
    }

    /**
     * Getter for <code>mysql.user.max_connections</code>.
     */
    public ULong getMaxConnections() {
        return this.maxConnections;
    }

    /**
     * Getter for <code>mysql.user.max_user_connections</code>.
     */
    public Long getMaxUserConnections() {
        return this.maxUserConnections;
    }

    /**
     * Getter for <code>mysql.user.plugin</code>.
     */
    public String getPlugin() {
        return this.plugin;
    }

    /**
     * Getter for <code>mysql.user.authentication_string</code>.
     */
    public String getAuthenticationString() {
        return this.authenticationString;
    }

    /**
     * Getter for <code>mysql.user.password_expired</code>.
     */
    public String getPasswordExpired() {
        return this.passwordExpired;
    }

    /**
     * Getter for <code>mysql.user.is_role</code>.
     */
    public String getIsRole() {
        return this.isRole;
    }

    /**
     * Getter for <code>mysql.user.default_role</code>.
     */
    public String getDefaultRole() {
        return this.defaultRole;
    }

    /**
     * Getter for <code>mysql.user.max_statement_time</code>.
     */
    public BigDecimal getMaxStatementTime() {
        return this.maxStatementTime;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("User (");

        sb.append(host);
        sb.append(", ").append(user);
        sb.append(", ").append(password);
        sb.append(", ").append(selectPriv);
        sb.append(", ").append(insertPriv);
        sb.append(", ").append(updatePriv);
        sb.append(", ").append(deletePriv);
        sb.append(", ").append(createPriv);
        sb.append(", ").append(dropPriv);
        sb.append(", ").append(reloadPriv);
        sb.append(", ").append(shutdownPriv);
        sb.append(", ").append(processPriv);
        sb.append(", ").append(filePriv);
        sb.append(", ").append(grantPriv);
        sb.append(", ").append(referencesPriv);
        sb.append(", ").append(indexPriv);
        sb.append(", ").append(alterPriv);
        sb.append(", ").append(showDbPriv);
        sb.append(", ").append(superPriv);
        sb.append(", ").append(createTmpTablePriv);
        sb.append(", ").append(lockTablesPriv);
        sb.append(", ").append(executePriv);
        sb.append(", ").append(replSlavePriv);
        sb.append(", ").append(replClientPriv);
        sb.append(", ").append(createViewPriv);
        sb.append(", ").append(showViewPriv);
        sb.append(", ").append(createRoutinePriv);
        sb.append(", ").append(alterRoutinePriv);
        sb.append(", ").append(createUserPriv);
        sb.append(", ").append(eventPriv);
        sb.append(", ").append(triggerPriv);
        sb.append(", ").append(createTablespacePriv);
        sb.append(", ").append(deleteHistoryPriv);
        sb.append(", ").append(sslType);
        sb.append(", ").append(sslCipher);
        sb.append(", ").append(x509Issuer);
        sb.append(", ").append(x509Subject);
        sb.append(", ").append(maxQuestions);
        sb.append(", ").append(maxUpdates);
        sb.append(", ").append(maxConnections);
        sb.append(", ").append(maxUserConnections);
        sb.append(", ").append(plugin);
        sb.append(", ").append(authenticationString);
        sb.append(", ").append(passwordExpired);
        sb.append(", ").append(isRole);
        sb.append(", ").append(defaultRole);
        sb.append(", ").append(maxStatementTime);

        sb.append(")");
        return sb.toString();
    }
}
