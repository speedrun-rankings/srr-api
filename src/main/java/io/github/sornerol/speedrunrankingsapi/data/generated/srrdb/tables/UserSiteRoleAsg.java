/*
 * This file is generated by jOOQ.
 */
package io.github.sornerol.speedrunrankingsapi.data.generated.srrdb.tables;


import io.github.sornerol.speedrunrankingsapi.data.generated.srrdb.Keys;
import io.github.sornerol.speedrunrankingsapi.data.generated.srrdb.Srrdb;
import io.github.sornerol.speedrunrankingsapi.data.generated.srrdb.tables.records.UserSiteRoleAsgRecord;
import io.github.sornerol.speedrunrankingsapi.util.typeconverter.UUIDByteArrayToStringConverter;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row2;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserSiteRoleAsg extends TableImpl<UserSiteRoleAsgRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>srrdb.user_site_role_asg</code>
     */
    public static final UserSiteRoleAsg USER_SITE_ROLE_ASG = new UserSiteRoleAsg();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserSiteRoleAsgRecord> getRecordType() {
        return UserSiteRoleAsgRecord.class;
    }

    /**
     * The column <code>srrdb.user_site_role_asg.user_id</code>.
     */
    public final TableField<UserSiteRoleAsgRecord, String> USER_ID = createField(DSL.name("user_id"), SQLDataType.BINARY(16).nullable(false), this, "", new UUIDByteArrayToStringConverter());

    /**
     * The column <code>srrdb.user_site_role_asg.site_role_id</code>.
     */
    public final TableField<UserSiteRoleAsgRecord, Integer> SITE_ROLE_ID = createField(DSL.name("site_role_id"), SQLDataType.INTEGER.defaultValue(DSL.field("NULL", SQLDataType.INTEGER)), this, "");

    private UserSiteRoleAsg(Name alias, Table<UserSiteRoleAsgRecord> aliased) {
        this(alias, aliased, null);
    }

    private UserSiteRoleAsg(Name alias, Table<UserSiteRoleAsgRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>srrdb.user_site_role_asg</code> table reference
     */
    public UserSiteRoleAsg(String alias) {
        this(DSL.name(alias), USER_SITE_ROLE_ASG);
    }

    /**
     * Create an aliased <code>srrdb.user_site_role_asg</code> table reference
     */
    public UserSiteRoleAsg(Name alias) {
        this(alias, USER_SITE_ROLE_ASG);
    }

    /**
     * Create a <code>srrdb.user_site_role_asg</code> table reference
     */
    public UserSiteRoleAsg() {
        this(DSL.name("user_site_role_asg"), null);
    }

    public <O extends Record> UserSiteRoleAsg(Table<O> child, ForeignKey<O, UserSiteRoleAsgRecord> key) {
        super(child, key, USER_SITE_ROLE_ASG);
    }

    @Override
    public Schema getSchema() {
        return Srrdb.SRRDB;
    }

    @Override
    public UniqueKey<UserSiteRoleAsgRecord> getPrimaryKey() {
        return Keys.KEY_USER_SITE_ROLE_ASG_PRIMARY;
    }

    @Override
    public List<UniqueKey<UserSiteRoleAsgRecord>> getKeys() {
        return Arrays.<UniqueKey<UserSiteRoleAsgRecord>>asList(Keys.KEY_USER_SITE_ROLE_ASG_PRIMARY);
    }

    @Override
    public List<ForeignKey<UserSiteRoleAsgRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<UserSiteRoleAsgRecord, ?>>asList(Keys.USER_SITE_ROLE_ASG_FK, Keys.USER_SITE_ROLE_ASG_FK_1);
    }

    private transient User _user;
    private transient SiteRole _siteRole;

    public User user() {
        if (_user == null)
            _user = new User(this, Keys.USER_SITE_ROLE_ASG_FK);

        return _user;
    }

    public SiteRole siteRole() {
        if (_siteRole == null)
            _siteRole = new SiteRole(this, Keys.USER_SITE_ROLE_ASG_FK_1);

        return _siteRole;
    }

    @Override
    public UserSiteRoleAsg as(String alias) {
        return new UserSiteRoleAsg(DSL.name(alias), this);
    }

    @Override
    public UserSiteRoleAsg as(Name alias) {
        return new UserSiteRoleAsg(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UserSiteRoleAsg rename(String name) {
        return new UserSiteRoleAsg(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UserSiteRoleAsg rename(Name name) {
        return new UserSiteRoleAsg(name, null);
    }

    // -------------------------------------------------------------------------
    // Row2 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row2<String, Integer> fieldsRow() {
        return (Row2) super.fieldsRow();
    }
}
