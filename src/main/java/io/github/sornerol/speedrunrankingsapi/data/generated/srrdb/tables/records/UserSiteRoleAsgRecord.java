/*
 * This file is generated by jOOQ.
 */
package io.github.sornerol.speedrunrankingsapi.data.generated.srrdb.tables.records;


import io.github.sornerol.speedrunrankingsapi.data.generated.srrdb.tables.UserSiteRoleAsg;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserSiteRoleAsgRecord extends UpdatableRecordImpl<UserSiteRoleAsgRecord> implements Record2<String, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>srrdb.user_site_role_asg.user_id</code>.
     */
    public UserSiteRoleAsgRecord setUserId(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>srrdb.user_site_role_asg.user_id</code>.
     */
    public String getUserId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>srrdb.user_site_role_asg.site_role_id</code>.
     */
    public UserSiteRoleAsgRecord setSiteRoleId(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>srrdb.user_site_role_asg.site_role_id</code>.
     */
    public Integer getSiteRoleId() {
        return (Integer) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<String, Integer> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<String, Integer> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return UserSiteRoleAsg.USER_SITE_ROLE_ASG.USER_ID;
    }

    @Override
    public Field<Integer> field2() {
        return UserSiteRoleAsg.USER_SITE_ROLE_ASG.SITE_ROLE_ID;
    }

    @Override
    public String component1() {
        return getUserId();
    }

    @Override
    public Integer component2() {
        return getSiteRoleId();
    }

    @Override
    public String value1() {
        return getUserId();
    }

    @Override
    public Integer value2() {
        return getSiteRoleId();
    }

    @Override
    public UserSiteRoleAsgRecord value1(String value) {
        setUserId(value);
        return this;
    }

    @Override
    public UserSiteRoleAsgRecord value2(Integer value) {
        setSiteRoleId(value);
        return this;
    }

    @Override
    public UserSiteRoleAsgRecord values(String value1, Integer value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserSiteRoleAsgRecord
     */
    public UserSiteRoleAsgRecord() {
        super(UserSiteRoleAsg.USER_SITE_ROLE_ASG);
    }

    /**
     * Create a detached, initialised UserSiteRoleAsgRecord
     */
    public UserSiteRoleAsgRecord(String userId, Integer siteRoleId) {
        super(UserSiteRoleAsg.USER_SITE_ROLE_ASG);

        setUserId(userId);
        setSiteRoleId(siteRoleId);
    }
}
